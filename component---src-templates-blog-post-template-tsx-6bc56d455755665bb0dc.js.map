{"version":3,"sources":["webpack:///./src/components/slices/blog-post.slices.tsx","webpack:///./src/components/slices/related-blog-post.slices.tsx","webpack:///./src/templates/blog-post.template.tsx"],"names":["BlogPostSlices","slices","map","primary","slice_type","color","mt","mb","text","my","src","image","url","alt","RelatedBlogPostSlices","console","log","flexDirection","maxWidth","to","blog_post","slug","document","data","hero_image","width","title","query","BlogPostTemplate","justifyContent","prismicBlogPost","body"],"mappings":"6IAOaA,EAAwD,SAAC,GAAe,IAAbC,EAAa,EAAbA,OACtE,OACE,oCACGA,EAAOC,IAAI,YAA6B,IAA1BC,EAA0B,EAA1BA,QACb,OADuC,EAAjBC,YAEpB,IAAK,WACH,OACE,kBAAC,IAAD,CAAIC,MAAM,eAAeC,GAAI,EAAGC,GAAI,GACjCJ,EAAQK,KAAKA,MAGpB,IAAK,WACH,OACE,kBAAC,IAAD,CAAIH,MAAM,eAAeC,GAAI,EAAGC,GAAI,GACjCJ,EAAQK,KAAKA,MAGpB,IAAK,OACH,OACE,kBAAC,IAAD,CAAWH,MAAM,cAAcI,GAAI,GAChCN,EAAQK,KAAKA,MAGpB,IAAK,QACH,OACE,kBAAC,IAAD,CAAKC,GAAI,GACP,yBAAKC,IAAKP,EAAQQ,MAAMC,IAAKC,IAAKV,EAAQQ,MAAME,OAGtD,QACE,OAAO,U,QC7BNC,EAAuE,SAAC,GAAe,IAAbb,EAAa,EAAbA,OAErF,OADAc,QAAQC,IAAIf,GAEV,kBAAC,IAAD,CAAMK,GAAI,EAAGW,cAAe,CAAC,SAAU,SAAU,MAAO,QACrDhB,EAAOC,IAAI,YAA6B,IAA1BC,EAA0B,EAA1BA,QACb,OADuC,EAAjBC,YAEpB,IAAK,gBACH,OACE,kBAAC,IAAD,CAAKc,SAAS,SACZ,kBAAC,IAAD,CAAMC,GAAE,SAAWhB,EAAQiB,UAAUC,MACnC,yBACEX,IAAKP,EAAQiB,UAAUE,SAAS,GAAGC,KAAKC,WAAWZ,IACnDC,IAAKV,EAAQiB,UAAUE,SAAS,GAAGC,KAAKC,WAAWX,IACnDY,MAAM,UAGV,kBAAC,IAAD,CAAIpB,MAAM,cAAcC,GAAI,GACzBH,EAAQiB,UAAUE,SAAS,GAAGC,KAAKG,MAAMlB,OAIlD,QACE,OAAO,UC9BnB,oCAQA,IAkBamB,EAAQ,aAwENC,UA1F4C,SAAC,GAAa,IAAXL,EAAW,EAAXA,KAC5D,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMM,eAAe,UACnB,kBAAC,IAAD,CAAKX,SAAS,SACZ,kBAAC,IAAD,CAAIX,GAAI,EAAGD,GAAI,EAAGD,MAAM,gBACrBkB,EAAKO,gBAAgBP,KAAKG,MAAMlB,MAEnC,kBAAC,EAAD,CAAgBP,OAAQsB,EAAKO,gBAAgBP,KAAKQ,OAClD,kBAAC,EAAD,CAAuB9B,OAAQsB,EAAKO,gBAAgBP,KAAKQ","file":"component---src-templates-blog-post-template-tsx-6bc56d455755665bb0dc.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { Box, H3, H2, Paragraph } from '@cogito-study/alea';\n\ninterface BlogPostSliceProps {\n  slices: any[];\n}\n\nexport const BlogPostSlices: FunctionComponent<BlogPostSliceProps> = ({ slices }) => {\n  return (\n    <>\n      {slices.map(({ primary, slice_type }) => {\n        switch (slice_type) {\n          case 'header_1':\n            return (\n              <H2 color=\"primary.dark\" mt={5} mb={4}>\n                {primary.text.text}\n              </H2>\n            );\n          case 'header_2':\n            return (\n              <H3 color=\"primary.dark\" mt={5} mb={4}>\n                {primary.text.text}\n              </H3>\n            );\n          case 'text':\n            return (\n              <Paragraph color=\"grey.dark.3\" my={4}>\n                {primary.text.text}\n              </Paragraph>\n            );\n          case 'image':\n            return (\n              <Box my={7}>\n                <img src={primary.image.url} alt={primary.image.alt} />\n              </Box>\n            );\n          default:\n            return null;\n        }\n      })}\n    </>\n  );\n};\n","import { Box, Flex, H4 } from '@cogito-study/alea';\nimport { Link } from 'gatsby';\nimport React, { FunctionComponent } from 'react';\n\ninterface RelatedBlogPostSlicesProps {\n  slices: any[];\n}\n\nexport const RelatedBlogPostSlices: FunctionComponent<RelatedBlogPostSlicesProps> = ({ slices }) => {\n  console.log(slices);\n  return (\n    <Flex mt={9} flexDirection={['column', 'column', 'row', 'row']}>\n      {slices.map(({ primary, slice_type }) => {\n        switch (slice_type) {\n          case 'related_posts':\n            return (\n              <Box maxWidth=\"360px\">\n                <Link to={`/blog/${primary.blog_post.slug}`}>\n                  <img\n                    src={primary.blog_post.document[0].data.hero_image.url}\n                    alt={primary.blog_post.document[0].data.hero_image.alt}\n                    width=\"100%\"\n                  />\n                </Link>\n                <H4 color=\"grey.dark.2\" mt={4}>\n                  {primary.blog_post.document[0].data.title.text}\n                </H4>\n              </Box>\n            );\n          default:\n            return null;\n        }\n      })}\n    </Flex>\n  );\n};\n","import { Box, Flex, H1 } from '@cogito-study/alea';\r\nimport { graphql } from 'gatsby';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { Container } from '../components/container';\r\nimport { Layout } from '../components/layout';\r\nimport { BlogPostSlices } from '../components/slices/blog-post.slices';\r\nimport { RelatedBlogPostSlices } from '../components/slices/related-blog-post.slices';\r\n\r\nconst BlogPostTemplate: FunctionComponent<{ data: any }> = ({ data }) => {\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <Flex justifyContent=\"center\">\r\n          <Box maxWidth=\"500px\">\r\n            <H1 mb={6} mt={9} color=\"primary.dark\">\r\n              {data.prismicBlogPost.data.title.text}\r\n            </H1>\r\n            <BlogPostSlices slices={data.prismicBlogPost.data.body} />\r\n            <RelatedBlogPostSlices slices={data.prismicBlogPost.data.body} />\r\n          </Box>\r\n        </Flex>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query PostBySlug($uid: String!) {\r\n    prismicBlogPost(slugs: { eq: $uid }) {\r\n      data {\r\n        content {\r\n          text\r\n        }\r\n        title {\r\n          text\r\n        }\r\n        hero_image {\r\n          url\r\n        }\r\n        body {\r\n          ... on PrismicBlogPostBodyHeader1 {\r\n            primary {\r\n              text {\r\n                text\r\n              }\r\n            }\r\n            slice_type\r\n          }\r\n          ... on PrismicBlogPostBodyHeader2 {\r\n            primary {\r\n              text {\r\n                text\r\n              }\r\n            }\r\n            slice_type\r\n          }\r\n          ... on PrismicBlogPostBodyText {\r\n            primary {\r\n              text {\r\n                text\r\n              }\r\n            }\r\n            slice_type\r\n          }\r\n          ... on PrismicBlogPostBodyImage {\r\n            primary {\r\n              image {\r\n                url\r\n                alt\r\n              }\r\n            }\r\n            slice_type\r\n          }\r\n          ... on PrismicBlogPostBodyRelatedPosts {\r\n            slice_type\r\n            primary {\r\n              blog_post {\r\n                slug\r\n                document {\r\n                  data {\r\n                    title {\r\n                      text\r\n                    }\r\n                    hero_image {\r\n                      url\r\n                      alt\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BlogPostTemplate;\r\n"],"sourceRoot":""}